name: Rust compile & test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: [push]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --tests
      - run: cargo check --benches
      - run: cargo doc --all --no-deps
        env:
          RUSTFLAGS: "-D warnings -W unreachable-pub"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --verbose
      - run: cargo clippy -- -D warnings
      - run: cargo clippy --target wasm32-unknown-unknown -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - run: cargo nextest run --verbose

#  wasm-test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@stable
#        with:
#          targets: wasm32-unknown-unknown
#      - name: Install wasm-pack
#        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
#      - uses: Swatinem/rust-cache@v2
#      - name: Run tests (wasm)
#        run: wasm-pack test --chrome --headless
#
#  hack:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@stable
#      - uses: taiki-e/install-action@cargo-hack
#      - uses: Swatinem/rust-cache@v2
#      - name: cargo/hack (verify features compile in isolation)
#        run: cargo hack check --each-feature --no-dev-deps
